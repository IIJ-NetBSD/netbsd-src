#! /bin/sh
# $OpenLDAP$
## This work is part of OpenLDAP Software <http://www.openldap.org/>.
##
## Copyright 1998-2024 The OpenLDAP Foundation.
## All rights reserved.
##
## Redistribution and use in source and binary forms, with or without
## modification, are permitted only as authorized by the OpenLDAP
## Public License.
##
## A copy of this license is available in the file LICENSE in the
## top-level directory of the distribution or, alternatively, at
## <http://www.OpenLDAP.org/license.html>.

echo "running defines.sh"
. $SRCDIR/scripts/defines.sh

mkdir -p $TESTDIR $DBDIR1 $DBDIR2 $DBDIR3

$SLAPPASSWD -g -n >$CONFIGPWF
echo "rootpw `$SLAPPASSWD -T $CONFIGPWF`" >$TESTDIR/configpw.conf

echo "Starting slapd on TCP/IP port $PORT2..."
. $CONFFILTER $BACKEND < $SCHEMACONF > $CONF2
$SLAPD -f $CONF2 -h $URI2 -d $LVL > $LOG2 2>&1 &
PID=$!
if test $WAIT != 0 ; then
    echo PID $PID
    read foo
fi
KILLPIDS="$PID"

echo "Starting a second slapd on TCP/IP port $PORT3..."
sed -e "s,$DBDIR1,$DBDIR2," < $CONF2 > $CONF3
$SLAPD -f $CONF3 -h $URI3 -d $LVL > $LOG3 2>&1 &
PID=$!
if test $WAIT != 0 ; then
    echo PID $PID
    read foo
fi
KILLPIDS="$KILLPIDS $PID"

echo "Starting a third slapd on TCP/IP port $PORT4..."
sed -e "s,$DBDIR1,$DBDIR3," < $CONF2 > $CONF4
$SLAPD -f $CONF4 -h $URI4 -d $LVL > $LOG4 2>&1 &
PID=$!
if test $WAIT != 0 ; then
    echo PID $PID
    read foo
fi
KILLPIDS="$KILLPIDS $PID"

echo "Starting lloadd on TCP/IP port $PORT1..."
. $CONFFILTER $BACKEND < $LLOADDANONCONF > $CONF1.lloadd
if test $AC_lloadd = lloaddyes; then
    $LLOADD -f $CONF1.lloadd -h $URI1 -d $LVL > $LOG1 2>&1 &
else
    . $CONFFILTER $BACKEND < $SLAPDLLOADCONF > $CONF1.slapd
    # FIXME: this won't work on Windows, but lloadd doesn't support Windows yet
    $SLAPD -f $CONF1.slapd -h $URI6 -d $LVL > $LOG1 2>&1 &
fi
PID=$!
if test $WAIT != 0 ; then
    echo PID $PID
    read foo
fi
KILLPIDS="$KILLPIDS $PID"

sleep $SLEEP0

echo "Using ldapsearch to retrieve the root DSE..."
for i in 0 1 2 3 4 5; do
    $LDAPSEARCH -b "" -s base -H $URI1 \
        '@extensibleObject' > $SEARCHOUT 2>&1
    RC=$?
    if test $RC = 0 ; then
        break
    fi
    echo "Waiting $SLEEP1 seconds for lloadd to start..."
    sleep $SLEEP1
done

if test $RC = 0 ; then
    echo "Using ldapsearch to retrieve the cn=Subschema..."
    $LDAPSEARCH -b "cn=Subschema" -s base -H $URI1 \
        '(&(objectClasses=top)(objectClasses=2.5.6.0))' cn objectClass \
        >> $SEARCHOUT  2>&1
    RC=$?

fi

if test $RC = 0 ; then
    echo "Using ldapsearch to retrieve the cn=Monitor..."
    $LDAPSEARCH -b "cn=Monitor" -s base -H $URI1 \
        '@monitor' >> $SEARCHOUT 2>&1
    RC=$?
fi

test $KILLSERVERS != no && kill -HUP $KILLPIDS

count=3
if test $RC != 0 ; then
    echo ">>>>> Test failed"
else
    RC=`grep '^dn:' $SEARCHOUT | wc -l`
    if test $RC != $count ; then
        echo ">>>>> Test failed: expected $count entries, got" $RC
        RC=1
    else
        echo ">>>>> Test succeeded"
        RC=0
    fi
fi

test $KILLSERVERS != no && wait

exit $RC
