# This testcase is part of GDB, the GNU debugger.

# Copyright 2010-2024 Free Software Foundation, Inc.

# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

# Test GDB stabs problem with qualified parameter of forward types.

standard_testfile

proc do_test {version} {
    with_test_prefix "$version" {
	if { ![runto_main] } {
	    return -1
	}
	gdb_test "rb test" "" "set breakpoints"
	gdb_test "continue" "Breakpoint .* test2 .*" \
	    "stop at first breakpoint in test2 function"

	# Check that the struct is read in correctly.
	gdb_test "print *t" ".*\{x = 5, y = 25, b = 2.5\}.*" \
	    "Inspect t in test2"

	# Check that the enum type length has been set to a non-zero value.
	gdb_test "print sizeof (*e)" "= \[1-9\]*" "sizeof (*e) in test2"

	gdb_test "continue" "Breakpoint .* test .*" \
	    "Stop at first breakpoint test function"

	gdb_test "print *t" ".*\{x = 5, y = 25, b = 2.5\}.*" \
	    "Inspect t in test"

	# Check that the enum type length has been set to a non-zero value.
	gdb_test "print sizeof (*e)" "= \[1-9\]*" "sizeof (*e) in test"
    }
}

# Compile and test with stabs debug format.
if { [prepare_for_testing "failed to prepare" ${testfile}-stabs $srcfile \
	  {debug additional_flags=-gstabs quiet}] == 0 } {
    do_test forced_stabs
}

# Compile and test with the default debug format.
if { [prepare_for_testing "failed to prepare" ${testfile}-default \
	  $srcfile] == 0 } {
    do_test natural_debug_format
}
