.\"	$NetBSD: X509_get_serialNumber.3,v 1.9 2024/09/08 13:08:37 christos Exp $
.\"
.\" -*- mode: troff; coding: utf-8 -*-
.\" Automatically generated by Pod::Man 5.01 (Pod::Simple 3.43)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" \*(C` and \*(C' are quotes in nroff, nothing in troff, for use with C<>.
.ie n \{\
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "X509_get_serialNumber 3"
.TH X509_get_serialNumber 3 2024-09-03 3.0.15 OpenSSL
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH NAME
X509_get_serialNumber,
X509_get0_serialNumber,
X509_set_serialNumber
\&\- get or set certificate serial number
.SH SYNOPSIS
.IX Header "SYNOPSIS"
.Vb 1
\& #include <openssl/x509.h>
\&
\& ASN1_INTEGER *X509_get_serialNumber(X509 *x);
\& const ASN1_INTEGER *X509_get0_serialNumber(const X509 *x);
\& int X509_set_serialNumber(X509 *x, ASN1_INTEGER *serial);
.Ve
.SH DESCRIPTION
.IX Header "DESCRIPTION"
\&\fBX509_get_serialNumber()\fR returns the serial number of certificate \fBx\fR as an
\&\fBASN1_INTEGER\fR structure which can be examined or initialised. The value
returned is an internal pointer which \fBMUST NOT\fR be freed up after the call.
.PP
\&\fBX509_get0_serialNumber()\fR is the same as \fBX509_get_serialNumber()\fR except it
accepts a const parameter and returns a const result.
.PP
\&\fBX509_set_serialNumber()\fR sets the serial number of certificate \fBx\fR to
\&\fBserial\fR. A copy of the serial number is used internally so \fBserial\fR should
be freed up after use.
.SH "RETURN VALUES"
.IX Header "RETURN VALUES"
\&\fBX509_get_serialNumber()\fR and \fBX509_get0_serialNumber()\fR return an \fBASN1_INTEGER\fR
structure.
.PP
\&\fBX509_set_serialNumber()\fR returns 1 for success and 0 for failure.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
\&\fBd2i_X509\fR\|(3),
\&\fBERR_get_error\fR\|(3),
\&\fBX509_CRL_get0_by_serial\fR\|(3),
\&\fBX509_get0_signature\fR\|(3),
\&\fBX509_get_ext_d2i\fR\|(3),
\&\fBX509_get_extension_flags\fR\|(3),
\&\fBX509_get_pubkey\fR\|(3),
\&\fBX509_get_subject_name\fR\|(3),
\&\fBX509_NAME_add_entry_by_txt\fR\|(3),
\&\fBX509_NAME_ENTRY_get_object\fR\|(3),
\&\fBX509_NAME_get_index_by_NID\fR\|(3),
\&\fBX509_NAME_print_ex\fR\|(3),
\&\fBX509_new\fR\|(3),
\&\fBX509_sign\fR\|(3),
\&\fBX509V3_get_d2i\fR\|(3),
\&\fBX509_verify_cert\fR\|(3)
.SH HISTORY
.IX Header "HISTORY"
The \fBX509_get_serialNumber()\fR and \fBX509_set_serialNumber()\fR functions are
available in all versions of OpenSSL.
The \fBX509_get0_serialNumber()\fR function was added in OpenSSL 1.1.0.
.SH COPYRIGHT
.IX Header "COPYRIGHT"
Copyright 2016 The OpenSSL Project Authors. All Rights Reserved.
.PP
Licensed under the Apache License 2.0 (the "License").  You may not use
this file except in compliance with the License.  You can obtain a copy
in the file LICENSE in the source distribution or at
<https://www.openssl.org/source/license.html>.
