diff -ru dist.old/crypto/rc2/rc2_cbc.c dist/crypto/rc2/rc2_cbc.c
--- dist.old/crypto/rc2/rc2_cbc.c	2023-05-07 14:40:21.000000000 -0400
+++ dist/crypto/rc2/rc2_cbc.c	2025-04-15 15:09:25.000000000 -0400
@@ -19,10 +19,10 @@
 void RC2_cbc_encrypt(const unsigned char *in, unsigned char *out, long length,
                      RC2_KEY *ks, unsigned char *iv, int encrypt)
 {
-    register uint32_t tin0, tin1;
-    register uint32_t tout0, tout1, xor0, xor1;
+    register unsigned long tin0, tin1;
+    register unsigned long tout0, tout1, xor0, xor1;
     register long l = length;
-    uint32_t tin[2];
+    unsigned long tin[2];
 
     if (encrypt) {
         c2l(iv, tout0);
@@ -91,12 +91,12 @@
     tin[0] = tin[1] = 0;
 }
 
-void RC2_encrypt(uint32_t *d, RC2_KEY *key)
+void RC2_encrypt(unsigned long *d, RC2_KEY *key)
 {
     int i, n;
     register RC2_INT *p0, *p1;
     register RC2_INT x0, x1, x2, x3, t;
-    uint32_t l;
+    unsigned long l;
 
     l = d[0];
     x0 = (RC2_INT) l & 0xffff;
@@ -132,17 +132,17 @@
     }
 
     d[0] =
-        (uint32_t)(x0 & 0xffff) | ((uint32_t)(x1 & 0xffff) << 16L);
+        (unsigned long)(x0 & 0xffff) | ((unsigned long)(x1 & 0xffff) << 16L);
     d[1] =
-        (uint32_t)(x2 & 0xffff) | ((uint32_t)(x3 & 0xffff) << 16L);
+        (unsigned long)(x2 & 0xffff) | ((unsigned long)(x3 & 0xffff) << 16L);
 }
 
-void RC2_decrypt(uint32_t *d, RC2_KEY *key)
+void RC2_decrypt(unsigned long *d, RC2_KEY *key)
 {
     int i, n;
     register RC2_INT *p0, *p1;
     register RC2_INT x0, x1, x2, x3, t;
-    uint32_t l;
+    unsigned long l;
 
     l = d[0];
     x0 = (RC2_INT) l & 0xffff;
@@ -179,7 +179,7 @@
     }
 
     d[0] =
-        (uint32_t)(x0 & 0xffff) | ((uint32_t)(x1 & 0xffff) << 16L);
+        (unsigned long)(x0 & 0xffff) | ((unsigned long)(x1 & 0xffff) << 16L);
     d[1] =
-        (uint32_t)(x2 & 0xffff) | ((uint32_t)(x3 & 0xffff) << 16L);
+        (unsigned long)(x2 & 0xffff) | ((unsigned long)(x3 & 0xffff) << 16L);
 }
diff -ru dist.old/crypto/rc2/rc2_ecb.c dist/crypto/rc2/rc2_ecb.c
--- dist.old/crypto/rc2/rc2_ecb.c	2023-05-07 14:40:21.000000000 -0400
+++ dist/crypto/rc2/rc2_ecb.c	2025-04-15 15:09:25.000000000 -0400
@@ -28,7 +28,7 @@
 void RC2_ecb_encrypt(const unsigned char *in, unsigned char *out, RC2_KEY *ks,
                      int encrypt)
 {
-    uint32_t l, d[2];
+    unsigned long l, d[2];
 
     c2l(in, l);
     d[0] = l;
diff -ru dist.old/crypto/rc2/rc2_local.h dist/crypto/rc2/rc2_local.h
--- dist.old/crypto/rc2/rc2_local.h	2023-05-07 14:40:21.000000000 -0400
+++ dist/crypto/rc2/rc2_local.h	2025-04-15 15:09:25.000000000 -0400
@@ -7,8 +7,6 @@
  * https://www.openssl.org/source/license.html
  */
 
-#include <inttypes.h>
-
 #undef c2l
 #define c2l(c,l)        (l =((unsigned long)(*((c)++)))    , \
                          l|=((unsigned long)(*((c)++)))<< 8L, \
diff -ru dist.old/crypto/rc2/rc2cfb64.c dist/crypto/rc2/rc2cfb64.c
--- dist.old/crypto/rc2/rc2cfb64.c	2023-05-07 14:40:21.000000000 -0400
+++ dist/crypto/rc2/rc2cfb64.c	2025-04-15 15:09:25.000000000 -0400
@@ -26,10 +26,10 @@
                        long length, RC2_KEY *schedule, unsigned char *ivec,
                        int *num, int encrypt)
 {
-    register uint32_t v0, v1, t;
+    register unsigned long v0, v1, t;
     register int n = *num;
     register long l = length;
-    uint32_t ti[2];
+    unsigned long ti[2];
     unsigned char *iv, c, cc;
 
     iv = (unsigned char *)ivec;
@@ -40,7 +40,7 @@
                 ti[0] = v0;
                 c2l(iv, v1);
                 ti[1] = v1;
-                RC2_encrypt(ti, schedule);
+                RC2_encrypt((unsigned long *)ti, schedule);
                 iv = (unsigned char *)ivec;
                 t = ti[0];
                 l2c(t, iv);
@@ -60,7 +60,7 @@
                 ti[0] = v0;
                 c2l(iv, v1);
                 ti[1] = v1;
-                RC2_encrypt(ti, schedule);
+                RC2_encrypt((unsigned long *)ti, schedule);
                 iv = (unsigned char *)ivec;
                 t = ti[0];
                 l2c(t, iv);
diff -ru dist.old/crypto/rc2/rc2ofb64.c dist/crypto/rc2/rc2ofb64.c
--- dist.old/crypto/rc2/rc2ofb64.c	2023-05-07 14:40:21.000000000 -0400
+++ dist/crypto/rc2/rc2ofb64.c	2025-04-15 15:09:25.000000000 -0400
@@ -25,12 +25,12 @@
                        long length, RC2_KEY *schedule, unsigned char *ivec,
                        int *num)
 {
-    register uint32_t v0, v1, t;
+    register unsigned long v0, v1, t;
     register int n = *num;
     register long l = length;
     unsigned char d[8];
     register char *dp;
-    uint32_t ti[2];
+    unsigned long ti[2];
     unsigned char *iv;
     int save = 0;
 
@@ -44,7 +44,7 @@
     l2c(v1, dp);
     while (l--) {
         if (n == 0) {
-            RC2_encrypt(ti, schedule);
+            RC2_encrypt((unsigned long *)ti, schedule);
             dp = (char *)d;
             t = ti[0];
             l2c(t, dp);
