--- dist.old/crypto/idea/i_cbc.c	2023-05-07 14:40:19.000000000 -0400
+++ dist/crypto/idea/i_cbc.c	2025-04-15 15:09:25.000000000 -0400
@@ -21,10 +21,10 @@
                       long length, IDEA_KEY_SCHEDULE *ks, unsigned char *iv,
                       int encrypt)
 {
-    register IDEA_INT tin0, tin1;
-    register IDEA_INT tout0, tout1, xor0, xor1;
+    register unsigned long tin0, tin1;
+    register unsigned long tout0, tout1, xor0, xor1;
     register long l = length;
-    IDEA_INT tin[2];
+    unsigned long tin[2];
 
     if (encrypt) {
         n2l(iv, tout0);
@@ -93,10 +93,10 @@
     tin[0] = tin[1] = 0;
 }
 
-void IDEA_encrypt(unsigned int *d, IDEA_KEY_SCHEDULE *key)
+void IDEA_encrypt(unsigned long *d, IDEA_KEY_SCHEDULE *key)
 {
     register IDEA_INT *p;
-    register IDEA_INT x1, x2, x3, x4, t0, t1, ul;
+    register unsigned long x1, x2, x3, x4, t0, t1, ul;
 
     x2 = d[0];
     x1 = (x2 >> 16);
diff -ru dist.old/crypto/idea/i_cfb64.c dist/crypto/idea/i_cfb64.c
--- dist.old/crypto/idea/i_cfb64.c	2023-05-07 14:40:19.000000000 -0400
+++ dist/crypto/idea/i_cfb64.c	2025-04-15 15:09:25.000000000 -0400
@@ -27,10 +27,10 @@
                         long length, IDEA_KEY_SCHEDULE *schedule,
                         unsigned char *ivec, int *num, int encrypt)
 {
-    register IDEA_INT v0, v1, t;
+    register unsigned long v0, v1, t;
     register int n = *num;
     register long l = length;
-    IDEA_INT ti[2];
+    unsigned long ti[2];
     unsigned char *iv, c, cc;
 
     if (n < 0) {
@@ -46,7 +46,7 @@
                 ti[0] = v0;
                 n2l(iv, v1);
                 ti[1] = v1;
-                IDEA_encrypt(ti, schedule);
+                IDEA_encrypt((unsigned long *)ti, schedule);
                 iv = (unsigned char *)ivec;
                 t = ti[0];
                 l2n(t, iv);
@@ -66,7 +66,7 @@
                 ti[0] = v0;
                 n2l(iv, v1);
                 ti[1] = v1;
-                IDEA_encrypt(ti, schedule);
+                IDEA_encrypt((unsigned long *)ti, schedule);
                 iv = (unsigned char *)ivec;
                 t = ti[0];
                 l2n(t, iv);
diff -ru dist.old/crypto/idea/i_ecb.c dist/crypto/idea/i_ecb.c
--- dist.old/crypto/idea/i_ecb.c	2023-05-07 14:40:19.000000000 -0400
+++ dist/crypto/idea/i_ecb.c	2025-04-15 15:09:25.000000000 -0400
@@ -26,7 +26,7 @@
 void IDEA_ecb_encrypt(const unsigned char *in, unsigned char *out,
                       IDEA_KEY_SCHEDULE *ks)
 {
-    IDEA_INT l0, l1, d[2];
+    unsigned long l0, l1, d[2];
 
     n2l(in, l0);
     d[0] = l0;
diff -ru dist.old/crypto/idea/i_ofb64.c dist/crypto/idea/i_ofb64.c
--- dist.old/crypto/idea/i_ofb64.c	2023-05-07 14:40:19.000000000 -0400
+++ dist/crypto/idea/i_ofb64.c	2025-04-15 15:09:25.000000000 -0400
@@ -26,12 +26,12 @@
                         long length, IDEA_KEY_SCHEDULE *schedule,
                         unsigned char *ivec, int *num)
 {
-    register IDEA_INT v0, v1, t;
+    register unsigned long v0, v1, t;
     register int n = *num;
     register long l = length;
     unsigned char d[8];
     register char *dp;
-    IDEA_INT ti[2];
+    unsigned long ti[2];
     unsigned char *iv;
     int save = 0;
 
@@ -50,7 +50,7 @@
     l2n(v1, dp);
     while (l--) {
         if (n == 0) {
-            IDEA_encrypt(ti, schedule);
+            IDEA_encrypt((unsigned long *)ti, schedule);
             dp = (char *)d;
             t = ti[0];
             l2n(t, dp);
diff -ru dist.old/crypto/idea/i_skey.c dist/crypto/idea/i_skey.c
--- dist.old/crypto/idea/i_skey.c	2023-05-07 14:40:19.000000000 -0400
+++ dist/crypto/idea/i_skey.c	2025-04-15 15:09:25.000000000 -0400
@@ -12,7 +12,6 @@
  * use where we're using them to implement the higher level EVP interface, as is
  * the case here.
  */
-#include <inttypes.h>
 #include "internal/deprecated.h"
 
 #include <openssl/idea.h>
@@ -91,7 +90,7 @@
 /* taken directly from the 'paper' I'll have a look at it later */
 static IDEA_INT inverse(unsigned int xin)
 {
-    int32_t n1, n2, q, r, b1, b2, t;
+    long n1, n2, q, r, b1, b2, t;
 
     if (xin == 0)
         b2 = 0;
